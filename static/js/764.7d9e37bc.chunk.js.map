{"version":3,"file":"static/js/764.7d9e37bc.chunk.js","mappings":"6LAwFA,UArFe,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/BC,QAAQC,IAAIH,GAkDZ,OAPAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeC,aAAaC,QAAQ,gBACtCF,GACFX,EAAUc,KAAKC,MAAMJ,GAExB,GAAE,KAGD,iCACE,mBAAQK,QAlDY,kBAAMf,EAAS,IAAf,EAkDpB,sBACA,kBAAMgB,SA3CW,SAACC,GAEpB,GADAA,EAAMC,iBACqB,KAAvBtB,EAAYuB,OACd,MAAM,IAAIC,MAAM,yBAYlBC,MAAM,6FAAD,OAC0FC,mBAC3F1B,IAXY,CACd2B,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAUHC,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACG,GACL,IAAMC,EAAaD,EAAKE,QAAQC,KAAI,SAACnC,GAAD,MAAa,CAC/CoC,MAAOpC,EAAOoC,MACdC,GAAIrC,EAAOqC,GAFuB,IAIpCpC,EAAUgC,GACVpB,aAAayB,QAAQ,eAAgBvB,KAAKwB,UAAUN,GACrD,IACAO,OAAM,SAACC,GAAD,OAAShC,QAAQiC,MAAMD,EAAvB,GACV,EAYG,WACE,kBACEE,SAnDkB,SAACxB,GACzBpB,EAAeoB,EAAMyB,cAAcC,MAAMC,eACzC,IAAMC,EAAmC,KAAvB5B,EAAM6B,OAAOH,MAAe,CAAEtC,MAAOY,EAAM6B,OAAOH,OAAU,CAAC,EAC/EvC,EAAgByC,EACjB,EAgDOF,MAAO/C,EACPmD,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,8BAEd,mBAAQH,KAAK,SAAb,UACE,iBAAMI,UAAU,eAAhB,0BAGJ,wBACGrD,EAAOmC,KAAI,SAACmB,GACX,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAMjB,IAA1B,SAAiCiB,EAAMlB,SADhCkB,EAAMjB,GAIlB,QAIR,C","sources":["pages/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n  console.log(query);\n\n  const goBackBtnMovies = () => navigate(\"/\");\n\n  const handleQueryChange = (event) => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n    const nextQuery = event.target.value !== \"\" ? { query: event.target.value } : {};\n    setSearchParams(nextQuery);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      throw new Error(\"Search query is empty\");\n    }\n\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYWNiZTlkZTY0MTI4OTM1OTE2YWUzNzRkMGNkNjA3NyIsInN1YiI6IjY0OTRhMDg4MzkxYjljMDBlODFiYTQzZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iTONktEdz4gCVm1GJD3NRI0zRCn5BZSM2hjCzfl__jc\",\n      },\n    };\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${encodeURIComponent(\n        searchQuery\n      )}`,\n      options\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        const moviesData = data.results.map((result) => ({\n          title: result.title,\n          id: result.id,\n        }));\n        setResult(moviesData);\n        localStorage.setItem(\"searchResult\", JSON.stringify(moviesData));\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    const storedResult = localStorage.getItem(\"searchResult\");\n    if (storedResult) {\n      setResult(JSON.parse(storedResult));\n    }\n  }, []);\n\n  return (\n    <>\n      <button onClick={goBackBtnMovies}>Go back</button>\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleQueryChange}\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n        <button type=\"submit\">\n          <span className=\"button-label\">Search</span>\n        </button>\n      </form>\n      <ul>\n        {result.map((movie) => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","result","setResult","navigate","useNavigate","useSearchParams","searchParams","setSearchParams","query","get","console","log","useEffect","storedResult","localStorage","getItem","JSON","parse","onClick","onSubmit","event","preventDefault","trim","Error","fetch","encodeURIComponent","method","headers","accept","Authorization","then","response","json","data","moviesData","results","map","title","id","setItem","stringify","catch","err","error","onChange","currentTarget","value","toLowerCase","nextQuery","target","type","autoComplete","autoFocus","placeholder","className","movie","to"],"sourceRoot":""}